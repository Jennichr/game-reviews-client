{"ast":null,"code":"var _jsxFileName = \"/Users/jennichr/Workspace/game-reviews/client/src/components/dropdown/SearchableDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ConditionalRenderList from './ConditionalRenderList';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchableDropdown() {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [toggle, setToggle] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Input, {\n      onChange: inputValue => {\n        setSearch(inputValue);\n        setToggle(true);\n      },\n      value: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(SearchableDropdown, \"/QF1rcD9+i4McN0hpuuE1lmbwCM=\");\n\n_c = SearchableDropdown;\nexport default SearchableDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchableDropdown\");","map":{"version":3,"sources":["/Users/jennichr/Workspace/game-reviews/client/src/components/dropdown/SearchableDropdown.js"],"names":["React","useState","ConditionalRenderList","Input","SearchableDropdown","search","setSearch","toggle","setToggle","inputValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;AAEA,sBACI;AAAA,2BACI,QAAC,KAAD;AACI,MAAA,QAAQ,EAAGQ,UAAD,IAAgB;AAAEH,QAAAA,SAAS,CAACG,UAAD,CAAT;AAAuBD,QAAAA,SAAS,CAAC,IAAD,CAAT;AAAiB,OADxE;AAEI,MAAA,KAAK,EAAEH;AAFX;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAQH;;GAZQD,kB;;KAAAA,kB;AAcT,eAAeA,kBAAf","sourcesContent":["import React, { useState } from 'react';\nimport ConditionalRenderList from './ConditionalRenderList';\nimport Input from './Input';\n\nfunction SearchableDropdown() {\n    const [search, setSearch] = useState('');\n    const [toggle, setToggle] = useState(true);\n\n    return (\n        <>\n            <Input\n                onChange={(inputValue) => { setSearch(inputValue); setToggle(true) }}\n                value={search}\n            />\n        </>\n    )\n}\n\nexport default SearchableDropdown"]},"metadata":{},"sourceType":"module"}